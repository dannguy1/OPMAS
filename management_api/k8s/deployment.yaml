apiVersion: apps/v1
kind: Deployment
metadata:
  name: opmas-management-api
  labels:
    app: opmas-management-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: opmas-management-api
  template:
    metadata:
      labels:
        app: opmas-management-api
    spec:
      containers:
      - name: opmas-management-api
        image: opmas-management-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: opmas-secrets
              key: database-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: opmas-secrets
              key: jwt-secret
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: opmas-secrets
              key: redis-url
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config-volume
        configMap:
          name: opmas-config
      securityContext:
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: opmas-management-api
spec:
  selector:
    app: opmas-management-api
  ports:
  - port: 80
    targetPort: http
    name: http
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: opmas-management-api
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.opmas.example.com
    secretName: opmas-tls
  rules:
  - host: api.opmas.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: opmas-management-api
            port:
              name: http
