name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10]
        node-version: [18.x]

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: opmas
          POSTGRES_PASSWORD: opmas
          POSTGRES_DB: opmas_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      nats:
        image: nats:2.8
        ports:
          - 4222:4222
        options: >-
          --health-cmd "nats-server --help"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r management_api/requirements.txt
        pip install -r management_api/requirements-dev.txt

    - name: Install Node.js dependencies
      run: |
        cd ui
        npm ci

    - name: Run Python tests
      run: |
        cd management_api
        pytest

    - name: Run Node.js tests
      run: |
        cd ui
        npm test

    - name: Build UI
      run: |
        cd ui
        npm run build

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10]
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r management_api/requirements-dev.txt

    - name: Install Node.js dependencies
      run: |
        cd ui
        npm ci

    - name: Run Python linters
      run: |
        cd management_api
        flake8 .
        black . --check
        isort . --check-only
        mypy .

    - name: Run Node.js linters
      run: |
        cd ui
        npm run lint
        npm run type-check 